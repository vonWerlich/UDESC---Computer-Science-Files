import math

def rk4(f, x0, y0,x_values, n):
    r = []
    h = x_values[0] - x0
    for _ in range(n):
        #realizar as iterações
        if (_>=1):
            h = x_values[_] - x_values[_-1]
        m1 = f(x0, y0)
        m2 = f(x0 + h/2, y0 + (h/2)*m1)
        m3 = f(x0 + h/2, y0 + (h/2)*m2)
        m4 = f(x0 + h, y0 + h *m3)
        yk = y0 + h * (m1+2*m2+2*m3+m4)/6
        #atualizando os valores
        x0 = x_values[_]
        y0 = yk
        #colocando valores na lista
        r.append((x0, y0))
    return r
    
# modificar valores de r e lambd    
def f(p, t):
    r = 0.16234
    lambd = 0.02836
    k = r * lambd
    return k * (1 - t)

# modificar valor de p0    
t0 = 0
p0 = 0.00156
t_values = [0.48175, 0.81189, 1.48668, 2.51021, 2.93628, 3.50538, 4.08972, 5.03636, 5.71464, 6.33559, 6.769, 7.66545, 8.26993, 8.88136, 9.74642, 10.11061, 10.96246, 11.42951, 12.15075, 12.73737, 13.74876, 14.57133, 15.2294, 15.67199, 16.22927, 16.76176, 17.54722, 18.53023, 18.83954, 19.58746, 20.57941, 21.22746, 21.769, 22.14153, 23.07038, 23.67847, 24.39451, 24.84644, 25.57354, 26.23887, 27.21777, 27.43853, 28.55865, 28.89542, 29.54845, 30.10879, 30.8959, 31.70675, 32.39204, 32.76583, 33.66536, 34.22931, 35.1895, 35.64642, 36.47862, 36.96242, 37.41858, 38.29319, 38.81123, 39.84047, 40.59915, 41.07215, 41.42085, 42.5934, 43.24906, 43.42426, 44.43214, 44.81118, 45.68479, 46.38886, 47.0982, 47.5901, 48.0758, 48.9876, 49.92572, 50.18914, 51.13429, 51.4757, 52.5046, 53.02612, 53.8016, 54.2091, 55.14445, 55.77869, 56.53176, 56.87235, 57.92463, 58.2308, 59.05961, 59.71899, 60.44343, 61.19897, 61.56058, 62.28284, 62.73396, 63.58557, 64.13744, 64.96193, 65.92974, 66.59747, 67.20182, 67.40256, 68.14439, 68.98821, 69.83718, 70.49547, 70.75184, 71.57085, 72.45105, 72.96099, 73.4257, 74.3433, 75.21067, 75.60934, 76.11871, 76.89003, 77.72863, 78.51696, 78.83959, 79.62742, 80.55381, 80.96797, 81.5022, 82.23507, 83.23268, 83.92427, 84.38384, 85.11108, 85.43842, 86.40384, 87.23957, 87.6847, 88.4246, 89.22436, 89.74568, 90.42534, 91.17687, 91.67483, 92.12552, 92.80193, 93.89205, 94.49474, 95.0256, 95.80734, 96.59691, 97.0672, 97.63812, 98.32984, 98.80933, 99.91726]
n = 150

r = rk4(f, t0, p0, t_values, n)

runge = []
for yi in r:
    runge.append(yi[1])
    
# solução exata:
# modificar valores de r, lambd e coef 
def p(t):
    r = 0.16234
    lambd = 0.02836
    k = r * lambd
    # resolver:
    # solve p'(t) = k * (1 - p(t)), p(0) = p0
    # no wolfram, substituindo o valor de p0 dado na questao
    coef = 0.00984
    return 1 - coef * math.exp(-k*t)
    
for i in range(150):
    print(f"{runge[i]}, {abs(0)},")