import numpy as np
# import scipy as sp

def best_poly (x, y, k):
    n = len(x)
    if n <= k:
        raise ValueError('O número de pontos deve ser maior que k (o grau do polinônmio)')

    somas = {}
    somas[0] = n
    for n in range(1, 2*k + 1):
        somas[n] = sum(xi ** n for xi in x)
    A = []
    B = []
    for i in range (k + 1):
        row = []
        for j in range(k + 1):
            row.append(somas[i + j])
        A.append(row)
        if i == 0:
            B.append(sum(y))
        else:
            B.append(sum(xi ** i * yi for xi, yi in zip(x,y)))
    return np.linalg.solve(A, B)

x = [0.0205, 1.3688, 1.6458, 2.2731, 2.9908, 3.7684, 4.8082, 5.2758, 6.4071, 6.9576, 7.772, 8.1621, 9.2663, 9.6565]
y = [5.6146, 4.6962, 4.6603, 4.2703, 4.1463, 3.8617, 3.7221, 4.315, 3.9295, 4.2735, 4.4694, 4.522, 5.0936, 5.3843]

a0, a1, a2 = best_poly(x, y, 2)

def p(a0,a1,a2,x):
    return a0 + a1 * x + a2 * x**2  #formula

print(f'{a0},{a1},{a2}')

values = [3.6246, 5.3884, 8.9451]

for v in values:
    print(p(a0,a1,a2,v))